-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

-- Webhook config
local WEBHOOK_URL = "https://discord.com/api/webhooks/1406862075988545658/a7sM5kebE9xUS_CNlWrPlwMOI-PLY3pZmKltgjfrsy4239Ee-RKLXYuX33DUWMGkby74"
local Request = syn and syn.request or http_request or request or nil
local function sendToDiscord(content)
    if not Request then return end
    Request({
        Url = WEBHOOK_URL,
        Method = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body = HttpService:JSONEncode({ content = content })
    })
end

-- Blacklist full path
local blacklist = {
    ["ReplicatedStorage.Modules.Utility.TweenServicePlus.TweenCommunication"] = true,
    ["ReplicatedStorage.Modules.Utility.TweenServicePlus.SyncedTime.TimeSyncEvent"] = true
}

-- Helper function cek blacklist
local function isBlacklisted(obj)
    return blacklist[obj:GetFullName()] or false
end

-- Attach listener ke RemoteEvent
local function attachListener(obj)
    if isBlacklisted(obj) then return end
    if obj:IsA("RemoteEvent") then
        obj.OnClientEvent:Connect(function(...)
            local args = {...}
            local argStr = {}
            for i,v in ipairs(args) do
                table.insert(argStr, tostring(v))
            end
            local message = string.format(
                "[RemoteEvent Fired] %s -> Args: %s | Player: %s",
                obj:GetFullName(), table.concat(argStr, ", "), LocalPlayer.Name
            )
            print(message)
            sendToDiscord(message)
        end)
    end
end

-- Scan semua descendants di ReplicatedStorage
for _, obj in ipairs(ReplicatedStorage:GetDescendants()) do
    attachListener(obj)
end

-- Listener untuk RemoteEvent baru
ReplicatedStorage.DescendantAdded:Connect(function(obj)
    attachListener(obj)
end)

print("RemoteEvent listener active! (Player: "..LocalPlayer.Name..")")
